@model Library_Project_Management.Models.Borrowing_Record

<h1>Create Borrowing Record</h1>

<form asp-action="Create">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

    <div class="form-group">
        <label asp-for="BookId" class="control-label">Book</label>
        <select asp-for="BookId" class="form-control"
                asp-items="@(new SelectList(ViewBag.Books, "BookId", "Title"))">
            <option value="">-- Select Book --</option>
        </select>
        <span asp-validation-for="BookId" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="MemberId" class="control-label">Member</label>
        <select asp-for="MemberId" class="form-control"
                asp-items="@(new SelectList(ViewBag.Members, "MemberId", "Name"))">
            <option value="">-- Select Member --</option>
        </select>
        <span asp-validation-for="MemberId" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="DueDate" class="control-label"></label>
        <input asp-for="DueDate" class="form-control" />
        <span asp-validation-for="DueDate" class="text-danger"></span>
    </div>

    <div class="form-group mt-3">
        <input type="submit" value="Create" class="btn btn-primary" />
        <a asp-action="Index" class="btn btn-secondary">Cancel</a>
    </div>
</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        $(function() {
            // Set default due date (15 days from today)
            var today = new Date();
            var dueDate = new Date();
            dueDate.setDate(today.getDate() + 15);
            $("#DueDate").val(dueDate.toISOString().split('T')[0]);
        });
    </script>
}